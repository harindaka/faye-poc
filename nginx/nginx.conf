worker_processes auto;

events {
    worker_connections  512;
}

http {

    upstream faye_server {
        #round robin
        server 127.0.0.1:3000;
    }

    server {

        listen 3443 ssl;
        #listen 443 ssl;
        server_name localhost;
        
        # Command to create selfsigned cert and key pair: openssl req -x509 -nodes -days 1825 -newkey rsa:2048 -keyout nginx-selfsigned.key -out nginx-selfsigned.crt
        # To trust the cert in ubuntu derivatives follow the steps below,
        # 1. Go to /usr/local/share/ca-certificates
        # 2. Create a new folder, i.e. "sudo mkdir nginx-selfsigned"
        # 3. Copy the .crt file into the new folder
        # 4. Make sure the permissions are OK (755 for the folder, 644 for the file) i.e. "sudo chmod -R 755 /usr/local/share/ca-certificates/nginx-selfsigned" and "sudo chmod 644 /usr/local/share/ca-certificates/nginx-selfsigned/nginx-selfsigned.crt"
        # 5. Run "sudo update-ca-certificates"
        # Note that clients running on NodeJS, Java, etc. may not use the OS cert store in which case the cert must be trusted via the client code
        ssl_certificate nginx-selfsigned.crt;
        ssl_certificate_key nginx-selfsigned.key;

        location / {

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_set_header Access-Control-Allow-Headers 'Access-Control-Allow-Origin, Upgrade';
            proxy_set_header Access-Control-Allow-Origin localhost.com*;
            add_header X-Real-IP $remote_addr;
            add_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Host $http_host;
            add_header X-NginX-Proxy true;
            proxy_pass http://faye_server;
        }
    }
}
